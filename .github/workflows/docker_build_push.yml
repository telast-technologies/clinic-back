name: Build and Deploy Image

on:
  release:
    types: [published]

env:
  DJANGO_IMAGE_NAME: ${{ vars.DOCKER_REGISTRY }}/clinic_django
  POSTGRES_IMAGE_NAME: ${{ vars.DOCKER_REGISTRY }}/clinic_postgres
  ENVIRONMENT: ${{ vars.ENVIRONMENT }} # This should be different per environment but the github plan doens't support environments

jobs:
  deploy:
    runs-on: [ubuntu-latest]
    concurrency: build
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.DOCKER_REGISTRY }}
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DJANGO_IMAGE_NAME }}
          tags: |
            type=ref,event=tag
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Django image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: "./docker/qa/django/Dockerfile"
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{vars.DOCKER_USERNAME }}/clinic_django:${{ steps.meta.outputs.version }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.DJANGO_IMAGE_NAME }}:${{ steps.meta.outputs.version }}
          build-args: "ENVIRONMENT"

      - name: Build and push DB image
        id: build-and-push-postgres
        uses: docker/build-push-action@v6
        with:
          context: .
          file: "./docker/qa/postgres/Dockerfile"
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{vars.DOCKER_USERNAME }}/clinic_postgres:${{ steps.meta.outputs.version }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.POSTGRES_IMAGE_NAME }}:${{ steps.meta.outputs.version }}
          build-args: "ENVIRONMENT"
